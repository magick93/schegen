{
  "openapi": "3.0.0",
  "info": {
    "version": "0.1.0",
    "title": "Anchor API",
    "description": "A SSV API that by Sigmaprime - OpenAPI 3.0 specification",
    "termsOfService": "https://github.com/sigp/anchor/blob/stable/README.md",
    "contact": {
      "name": "contact@sigmaprime.io"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    }
  },
  "paths": {
    "/api/v4/{network}/accounts": {
      "get": {
        "operationId": "AccountV4Controller_list",
        "summary": "List accounts with pagination",
        "parameters": [
          {
            "name": "network",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "page",
            "required": false,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "perPage",
            "required": false,
            "in": "query",
            "description": "Maximum allowed value: 100",
            "schema": {
              "minimum": 1,
              "maximum": 100,
              "default": 10,
              "type": "number"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Accounts found and returned in response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "perPage": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "page",
                        "perPage"
                      ],
                      "title": "Filter"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "ownerAddress": {
                            "type": "string"
                          },
                          "recipientAddress": {
                            "anyOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "network": {
                            "type": "string",
                            "enum": [
                              "mainnet"
                            ],
                            "title": "Network"
                          },
                          "version": {
                            "type": "string",
                            "enum": [
                              "v4"
                            ],
                            "title": "Version"
                          }
                        },
                        "required": [
                          "id",
                          "network",
                          "ownerAddress",
                          "recipientAddress",
                          "version"
                        ],
                        "title": "Datum"
                      }
                    }
                  },
                  "required": [
                    "data",
                    "filter",
                    "type"
                  ],
                  "title": "Accounts"
                }
              }
            }
          },
          "404": {
            "description": "Requested page number does not exists"
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Accounts",
          "v4"
        ]
      }
    },
    "/api/v4/{network}/accounts/{ownerAddress}": {
      "get": {
        "operationId": "AccountV4Controller_byId",
        "summary": "Get fee recipient by owner address",
        "parameters": [
          {
            "name": "network",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "ownerAddress",
            "required": true,
            "in": "path",
            "description": "Owner address of account",
            "schema": {
              "oneOf": [
                {
                  "type": "string"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Account found and returned in response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "page": {
                          "type": "integer"
                        },
                        "perPage": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "page",
                        "perPage"
                      ],
                      "title": "Filter"
                    },
                    "data": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "ownerAddress": {
                            "type": "string"
                          },
                          "recipientAddress": {
                            "anyOf": [
                              {
                                "type": "null"
                              },
                              {
                                "type": "string"
                              }
                            ]
                          },
                          "network": {
                            "type": "string",
                            "enum": [
                              "mainnet"
                            ],
                            "title": "Network"
                          },
                          "version": {
                            "type": "string",
                            "enum": [
                              "v4"
                            ],
                            "title": "Version"
                          }
                        },
                        "required": [
                          "id",
                          "network",
                          "ownerAddress",
                          "recipientAddress",
                          "version"
                        ],
                        "title": "Datum"
                      }
                    }
                  },
                  "required": [
                    "data",
                    "filter",
                    "type"
                  ],
                  "title": "Accounts"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Accounts",
          "v4"
        ]
      }
    },
    "/api/v4/{network}/accounts/counts/{ownerAddress}": {
      "parameters": [
        {
          "name": "network",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Network name"
        },
        {
          "name": "ownerAddress",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string"
          },
          "description": "Owner address"
        }
      ],
      "get": {
        "summary": "Get operators and clusters count by owner address",
        "tags": [
          "Accounts"
        ],
        "responses": {
          "200": {
            "description": "Counts found and returned in response"
          },
          "400": {
            "description": "Owner address has wrong format"
          },
          "500": {
            "description": "Internal server error"
          }
        }
      }
    },
    "/api/v4/{network}/clusters/count": {
      "get": {
        "operationId": "ClusterV4Controller_count",
        "summary": "Count clusters in network",
        "parameters": [
          {
            "name": "network",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Clusters counted and returned in response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "data": {
                      "type": "integer"
                    }
                  },
                  "required": [
                    "data",
                    "type"
                  ],
                  "title": "ClusterCount"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error"
          }
        },
        "tags": [
          "Clusters"
        ]
      }
    },
    "/api/v4/{network}/clusters": {
      "get": {
        "operationId": "ClusterV4Controller_list",
        "summary": "List clusters with pagination",
        "parameters": [
          {
            "name": "network",
            "required": true,
            "in": "path",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "from",
            "required": true,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "limit",
            "required": true,
            "in": "query",
            "schema": {
              "minimum": 1,
              "default": 1,
              "type": "number"
            }
          },
          {
            "name": "operatorDetails",
            "required": false,
            "in": "query",
            "description": "Response with operators details",
            "schema": {
              "oneOf": [
                {
                  "type": "boolean"
                }
              ]
            }
          }
        ],
        "responses": {
          "200": {
            "404": {
              "description": "Requested page number does not exists"
            },
            "500": {
              "description": "Internal server error"
            },
            "description": "Clusters found and returned in response",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "additionalProperties": false,
                  "properties": {
                    "type": {
                      "type": "string"
                    },
                    "filter": {
                      "type": "object",
                      "additionalProperties": false,
                      "properties": {
                        "from": {
                          "type": "integer"
                        },
                        "limit": {
                          "type": "integer"
                        }
                      },
                      "required": [
                        "from",
                        "limit"
                      ],
                      "title": "Filter"
                    },
                    "clusters": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "clusterId": {
                            "type": "string"
                          },
                          "network": {
                            "type": "string"
                          },
                          "version": {
                            "type": "string"
                          },
                          "ownerAddress": {
                            "type": "string"
                          },
                          "validatorCount": {
                            "type": "integer"
                          },
                          "networkFeeIndex": {
                            "type": "string"
                          },
                          "index": {
                            "type": "string"
                          },
                          "balance": {
                            "type": "string"
                          },
                          "active": {
                            "type": "boolean"
                          },
                          "isLiquidated": {
                            "type": "boolean"
                          },
                          "operators": {
                            "type": "array",
                            "items": {
                              "type": "integer"
                            }
                          },
                          "blockNumber": {
                            "type": "integer"
                          },
                          "createdAt": {
                            "type": "string",
                            "format": "date-time"
                          },
                          "updatedAt": {
                            "type": "string",
                            "format": "date-time"
                          }
                        },
                        "required": [
                          "active",
                          "balance",
                          "blockNumber",
                          "clusterId",
                          "createdAt",
                          "id",
                          "index",
                          "isLiquidated",
                          "network",
                          "networkFeeIndex",
                          "operators",
                          "ownerAddress",
                          "updatedAt",
                          "validatorCount",
                          "version"
                        ],
                        "title": "Cluster"
                      }
                    }
                  },
                  "required": [
                    "clusters",
                    "filter",
                    "type"
                  ],
                  "title": "Clusters"
                }
              }
            }
          },
          "tags": [
            "Clusters"
          ]
        }
      },
      "/api/v4/{network}/clusters/updates": {
        "get": {
          "operationId": "ClusterV4Controller_updates",
          "summary": "Get clusters updates from specific block number",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "fromBlock",
              "required": true,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cluster updates found and returned in response"
            },
            "400": {
              "description": "Invalid request",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "error": {
                        "$ref": "#/definitions/Error"
                      }
                    },
                    "required": [
                      "error"
                    ],
                    "title": "ClusterUpdate400",
                    "$schema": "http://json-schema.org/draft-06/schema#",
                    "definitions": {
                      "ClusterUpdate400": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error": {
                            "$ref": "#/definitions/Error"
                          }
                        },
                        "required": [
                          "error"
                        ],
                        "title": "ClusterUpdate400"
                      },
                      "Error": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "code": {
                            "type": "integer"
                          },
                          "message": {
                            "$ref": "#/definitions/Message"
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ],
                        "title": "Error"
                      },
                      "Message": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "error": {
                            "type": "string"
                          },
                          "statusCode": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "error",
                          "message",
                          "statusCode"
                        ],
                        "title": "Message"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Clusters"
          ]
        }
      },
      "/api/v4/{network}/clusters/{id}": {
        "get": {
          "operationId": "ClusterV4Controller_byId",
          "summary": "Get cluster by its primary ID or keccak256 hash",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "id",
              "required": true,
              "in": "path",
              "description": "Cluster keccak256 hash ID or primary numeric ID",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            {
              "name": "operatorDetails",
              "required": false,
              "in": "query",
              "description": "Response with operator details",
              "schema": {
                "oneOf": [
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cluster found and returned in response"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Clusters"
          ]
        }
      },
      "/api/v4/{network}/clusters/owner/{owner}/operators/{operators}": {
        "get": {
          "operationId": "ClusterV4Controller_byOwnerAndOperators",
          "summary": "Get cluster by owner address and operators list",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "owner",
              "required": true,
              "in": "path",
              "description": "Owner address",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            {
              "name": "operators",
              "required": true,
              "in": "path",
              "description": "Comma-separated operator IDs",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            {
              "name": "operatorDetails",
              "required": false,
              "in": "query",
              "description": "Response with operators details",
              "schema": {
                "oneOf": [
                  {
                    "type": "boolean"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cluster found and returned in response"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Clusters"
          ]
        }
      },
      "/api/v4/{network}/clusters/owner/{owner}": {
        "get": {
          "operationId": "ClusterV4Controller_byOwner",
          "summary": "Get clusters by owner address",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "description": "Maximum allowed value: 100",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 10,
                "type": "number"
              }
            },
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Sort by one or few fields. <br><br>You can sort only by: &nbsp;&nbsp;<code>id</code>,&nbsp;&nbsp;<code>index</code>,&nbsp;&nbsp;<code>validator_count</code><br><br>Examples: <ol><li><code>id:asc,index:desc</code><br><br></li><li><code>validator_count:desc</code><br><br></li><li>without specifying sort order: <code>validator_count,id</code> - equals to: <code>validator_count:asc,id:asc</code><br><br></li></ol>",
              "schema": {
                "default": "",
                "type": "string"
              }
            },
            {
              "name": "operatorDetails",
              "required": false,
              "in": "query",
              "description": "Response with operators details",
              "schema": {
                "oneOf": [
                  {
                    "type": "boolean"
                  }
                ]
              }
            },
            {
              "name": "owner",
              "required": true,
              "in": "path",
              "description": "Owner address",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Clusters found and returned in response"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Clusters"
          ]
        }
      },
      "/api/v4/{network}/clusters/hash/{clusterHash}": {
        "get": {
          "operationId": "ClusterV4Controller_validators",
          "summary": "Get cluster info (validators and operators) by cluster hash",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "description": "Maximum allowed value: 100",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 10,
                "type": "number"
              }
            },
            {
              "name": "clusterHash",
              "required": true,
              "in": "path",
              "description": "Cluster hash",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Cluster info found and returned in response"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Clusters"
          ]
        }
      },
      "/api/v4/{network}/duties/{validator}": {
        "get": {
          "operationId": "DutiesV4Controller_duties",
          "summary": "List of duties performed by validator",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "description": "Maximum allowed value: 100",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 10,
                "type": "number"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "validator",
              "required": true,
              "in": "path",
              "description": "Validator address",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Validator found and duties returned in response"
            },
            "400": {
              "description": "Validator address has wrong format"
            },
            "404": {
              "description": "Validator not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Duties",
            "v4",
            "Duties"
          ]
        }
      },
      "/api/v4/{network}/events/{txHash}": {
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Network name"
          },
          {
            "name": "txHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Transaction hash"
          }
        ],
        "get": {
          "summary": "Get event by transaction hash",
          "tags": [
            "Events"
          ],
          "responses": {
            "200": {
              "description": "Event found and returned in response"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/api/v4/{network}/faucet": {
        "get": {
          "operationId": "FaucetController_getTransactions",
          "summary": "Get transactions by owner address or without",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Faucet"
          ]
        },
        "post": {
          "operationId": "FaucetController_setTransaction",
          "summary": "Create transaction by owner address",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "ownerAddress",
                    "network",
                    "version"
                  ],
                  "properties": {
                    "owner_address": {
                      "type": "string"
                    },
                    "networkId": {
                      "type": "number"
                    },
                    "version": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "One or more parameters are invalid"
            },
            "406": {
              "description": "Reached max transactions per day or faucet depleted"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Faucet"
          ]
        }
      },
      "/api/v4/{network}/faucet/config": {
        "get": {
          "operationId": "FaucetController_getFaucetConfig",
          "summary": "Get transactions config",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Faucet"
          ]
        }
      },
      "/api/finance/currency/convert/{symbol}/{quote}": {
        "get": {
          "operationId": "FinanceController_currencyConvert",
          "summary": "Convert from a currency into a quote currency",
          "parameters": [
            {
              "name": "symbol",
              "required": true,
              "in": "path",
              "description": "Currency to convert from",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            {
              "name": "quote",
              "required": true,
              "in": "path",
              "description": "Currency to convert to",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Both currencies are valid and has been converted",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "symbol": {
                        "type": "string"
                      },
                      "quote": {
                        "type": "string"
                      },
                      "price": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Currency can not be found or is not valid",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "symbol": {
                        "type": "string"
                      },
                      "quote": {
                        "type": "string"
                      },
                      "error": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "429": {
              "description": "Rate limit exceeded",
              "content": {
                "application/json": {
                  "schema": {
                    "properties": {
                      "message": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Finance"
          ]
        }
      },
      "/api/v4/{network}/health": {
        "get": {
          "operationId": "HealthV4Controller_health",
          "summary": "Health check",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Health check for all endpoints",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "operators": {
                        "type": "integer"
                      },
                      "validators": {
                        "type": "integer"
                      },
                      "operators_graph": {
                        "type": "integer"
                      },
                      "operator": {
                        "type": "integer"
                      },
                      "validators_in_operator": {
                        "type": "integer"
                      }
                    },
                    "required": [
                      "operator",
                      "operators",
                      "operators_graph",
                      "validators",
                      "validators_in_operator"
                    ],
                    "title": "HealthCheck",
                    "$schema": "http://json-schema.org/draft-06/schema#",
                    "definitions": {
                      "HealthCheck": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "operators": {
                            "type": "integer"
                          },
                          "validators": {
                            "type": "integer"
                          },
                          "operators_graph": {
                            "type": "integer"
                          },
                          "operator": {
                            "type": "integer"
                          },
                          "validators_in_operator": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "operator",
                          "operators",
                          "operators_graph",
                          "validators",
                          "validators_in_operator"
                        ],
                        "title": "HealthCheck"
                      }
                    }
                  }
                }
              }
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Health",
            "v4"
          ]
        }
      },
      "/api/v4/{network}/incentivization/merkle-tree": {
        "get": {
          "operationId": "IncentivizationV4Controller_migrationOperatorsDistribution",
          "summary": "Merkle tree for version and network",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Merkle tree found for this version and network"
            },
            "404": {
              "description": "Merkle tree not found for this version and network",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "error": {
                        "$ref": "#/definitions/Error"
                      }
                    },
                    "required": [
                      "error"
                    ],
                    "title": "MerkeltreeNotFound",
                    "$schema": "http://json-schema.org/draft-06/schema#",
                    "definitions": {
                      "MerkeltreeNotFound": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "error": {
                            "$ref": "#/definitions/Error"
                          }
                        },
                        "required": [
                          "error"
                        ],
                        "title": "MerkeltreeNotFound"
                      },
                      "Error": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "code": {
                            "type": "integer"
                          },
                          "message": {
                            "$ref": "#/definitions/Message"
                          }
                        },
                        "required": [
                          "code",
                          "message"
                        ],
                        "title": "Error"
                      },
                      "Message": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "message": {
                            "type": "string"
                          }
                        },
                        "required": [
                          "message"
                        ],
                        "title": "Message"
                      }
                    }
                  }
                }
              }
            }
          },
          "tags": [
            "Incentivized",
            "v4",
            "Incentivized"
          ]
        }
      },
      "/api/v4/{network}/operators/graph": {
        "get": {
          "operationId": "OperatorsV4Controller_graph",
          "summary": "List of operators and validators for search widget",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "description": "Maximum allowed value: 10000",
              "schema": {
                "minimum": 1,
                "maximum": 10000,
                "default": 1000,
                "type": "number"
              }
            },
            {
              "name": "randomize",
              "required": false,
              "in": "query",
              "description": "To use this parameter specify \"true\" as string value",
              "schema": {
                "default": "",
                "enum": [
                  "true",
                  "false",
                  ""
                ],
                "type": "string"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Operators found and returned in response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "operators": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Operator"
                        }
                      },
                      "pagination": {
                        "$ref": "#/definitions/Pagination"
                      }
                    },
                    "required": [
                      "operators",
                      "pagination"
                    ],
                    "title": "OperatorsGraph",
                    "$schema": "http://json-schema.org/draft-06/schema#",
                    "definitions": {
                      "OperatorsGraph": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "operators": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Operator"
                            }
                          },
                          "pagination": {
                            "$ref": "#/definitions/Pagination"
                          }
                        },
                        "required": [
                          "operators",
                          "pagination"
                        ],
                        "title": "OperatorsGraph"
                      },
                      "Operator": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "id_str": {
                            "type": "string",
                            "format": "integer"
                          },
                          "declared_fee": {
                            "type": "string",
                            "format": "integer"
                          },
                          "previous_fee": {
                            "type": "string"
                          },
                          "fee": {
                            "type": "string",
                            "format": "integer"
                          },
                          "public_key": {
                            "type": "string"
                          },
                          "owner_address": {
                            "type": "string"
                          },
                          "address_whitelist": {
                            "$ref": "#/definitions/AddressWhitelist"
                          },
                          "is_private": {
                            "type": "boolean"
                          },
                          "whitelisting_contract": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "setup_provider": {
                            "type": "string"
                          },
                          "eth1_node_client": {
                            "$ref": "#/definitions/Eth1NodeClient"
                          },
                          "eth2_node_client": {
                            "$ref": "#/definitions/Eth2NodeClient"
                          },
                          "mev_relays": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "website_url": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "twitter_url": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "linkedin_url": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "dkg_address": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "logo": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "qt-uri-extensions": [
                              ".jpeg",
                              ".png"
                            ]
                          },
                          "type": {
                            "$ref": "#/definitions/Type"
                          },
                          "name": {
                            "type": "string"
                          },
                          "performance": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "number"
                            }
                          },
                          "is_valid": {
                            "type": "boolean"
                          },
                          "is_deleted": {
                            "type": "boolean"
                          },
                          "is_active": {
                            "type": "integer"
                          },
                          "status": {
                            "$ref": "#/definitions/Status"
                          },
                          "validators_count": {
                            "type": "integer"
                          },
                          "version": {
                            "$ref": "#/definitions/Version"
                          },
                          "network": {
                            "$ref": "#/definitions/Network"
                          },
                          "whitelist_addresses": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          }
                        },
                        "required": [
                          "address_whitelist",
                          "declared_fee",
                          "description",
                          "dkg_address",
                          "eth1_node_client",
                          "eth2_node_client",
                          "fee",
                          "id",
                          "id_str",
                          "is_active",
                          "is_deleted",
                          "is_private",
                          "is_valid",
                          "linkedin_url",
                          "location",
                          "logo",
                          "mev_relays",
                          "name",
                          "network",
                          "owner_address",
                          "performance",
                          "previous_fee",
                          "public_key",
                          "setup_provider",
                          "status",
                          "twitter_url",
                          "type",
                          "validators_count",
                          "version",
                          "website_url",
                          "whitelisting_contract"
                        ],
                        "title": "Operator"
                      },
                      "Pagination": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "total": {
                            "type": "integer"
                          },
                          "pages": {
                            "type": "integer"
                          },
                          "per_page": {
                            "type": "integer"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "current_first": {
                            "type": "integer"
                          },
                          "current_last": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "current_first",
                          "current_last",
                          "page",
                          "pages",
                          "per_page",
                          "total"
                        ],
                        "title": "Pagination"
                      },
                      "AddressWhitelist": {
                        "type": "string",
                        "enum": [
                          "",
                          "0x1DB131C9061e84B74b1abfc2593FDb77F330262E"
                        ],
                        "title": "AddressWhitelist"
                      },
                      "Eth1NodeClient": {
                        "type": "string",
                        "enum": [
                          "",
                          "Nethermind",
                          "Besu"
                        ],
                        "title": "Eth1NodeClient"
                      },
                      "Eth2NodeClient": {
                        "type": "string",
                        "enum": [
                          "",
                          "Lighthouse",
                          "Nimbus"
                        ],
                        "title": "Eth2NodeClient"
                      },
                      "Network": {
                        "type": "string",
                        "enum": [
                          "mainnet"
                        ],
                        "title": "Network"
                      },
                      "Status": {
                        "type": "string",
                        "enum": [
                          "Active"
                        ],
                        "title": "Status"
                      },
                      "Type": {
                        "type": "string",
                        "enum": [
                          "operator"
                        ],
                        "title": "Type"
                      },
                      "Version": {
                        "type": "string",
                        "enum": [
                          "v4"
                        ],
                        "title": "Version"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Requested page number does not exists"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators",
            "Graph"
          ]
        }
      },
      "/api/v4/{network}/operators/owned_by/{ownerAddress}": {
        "get": {
          "operationId": "OperatorsV4Controller_ownedBy",
          "summary": "List of operators by owner address",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "description": "Maximum allowed value: 100",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 10,
                "type": "number"
              }
            },
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Sort by one or few fields. <br><br>You can sort only by: &nbsp;&nbsp;<code>id</code>,&nbsp;&nbsp;<code>fee</code>,&nbsp;&nbsp;<code>public_key</code>,&nbsp;&nbsp;<code>owner_address</code>,&nbsp;&nbsp;<code>name</code>,&nbsp;&nbsp;<code>address</code>,&nbsp;&nbsp;<code>location</code>,&nbsp;&nbsp;<code>setup_provider</code>,&nbsp;&nbsp;<code>eth1_node_client</code>,&nbsp;&nbsp;<code>eth2_node_client</code>,&nbsp;&nbsp;<code>description</code>,&nbsp;&nbsp;<code>website_url</code>,&nbsp;&nbsp;<code>twitter_url</code>,&nbsp;&nbsp;<code>linkedin_url</code>,&nbsp;&nbsp;<code>validators_count</code>,&nbsp;&nbsp;<code>status</code>,&nbsp;&nbsp;<code>performance.30d</code>,&nbsp;&nbsp;<code>performance.24h</code>,&nbsp;&nbsp;<code>type</code><br><br>Examples: <ol><li><code>name:asc,address:desc</code><br><br></li><li><code>validators_count:desc</code><br><br></li><li>without specifying sort order: <code>validators_count,name:asc</code> - equals to: <code>validators_count:asc,name:asc</code><br><br></li></ol>",
              "schema": {
                "default": "",
                "type": "string"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "ownerAddress",
              "required": true,
              "in": "path",
              "description": "Owner address",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Operators found and returned in response"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/operators/incentivized/{operator}": {
        "get": {
          "operationId": "OperatorsV4Controller_incentivized",
          "summary": "Incentivized stats for operator",
          "parameters": [
            {
              "name": "epochFrom",
              "required": true,
              "in": "query",
              "schema": {
                "minimum": 1,
                "type": "number"
              }
            },
            {
              "name": "epochsPerRound",
              "required": true,
              "in": "query",
              "schema": {
                "minimum": 1,
                "type": "number"
              }
            },
            {
              "name": "rounds",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "maximum": 5,
                "default": 3,
                "type": "number"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "operator",
              "required": true,
              "in": "path",
              "description": "Operator address or ID from the contract",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Operator found and returned in response"
            },
            "400": {
              "description": "Operator address has wrong format"
            },
            "404": {
              "description": "Operator not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/operators/{operator}": {
        "get": {
          "operationId": "OperatorsV4Controller_getOperator",
          "summary": "Single operator data",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "operator",
              "required": true,
              "in": "path",
              "description": "Operator address or ID from the contract",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Operator found and returned in response"
            },
            "400": {
              "description": "Operator id/address has wrong format"
            },
            "404": {
              "description": "Operator not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/operators/dkg_health_check": {
        "post": {
          "operationId": "OperatorsV4Controller_getDkgHealthCheck",
          "summary": "Dkg address health check",
          "parameters": [
            {
              "name": "network",
              "in": "path",
              "required": true,
              "schema": {
                "type": "string"
              },
              "description": "Network name"
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/DkgHealthCheckDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "true if dkg endpoint is active, false else"
            },
            "201": {
              "description": "true if dkg endpoint is active, false else"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/operators/public_key/{public_key}": {
        "get": {
          "operationId": "OperatorsV4Controller_getByPublicKey",
          "summary": "Get operator by public key",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "public_key",
              "required": true,
              "in": "path",
              "description": "Operator by public key",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Operator found and returned in response"
            },
            "400": {
              "description": "Operator public key has wrong format"
            },
            "404": {
              "description": "Operator not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/operators": {
        "get": {
          "operationId": "OperatorsV4Controller_operators",
          "summary": "List of operators",
          "parameters": [
            {
              "name": "type",
              "required": false,
              "in": "query",
              "description": "Case-sensitive filter by operator \"type\" in <code>full match</code> manner, comma-separated for multiple matching. <br><br>Example:<code>verified_operator</code>, <code>verified_operator,dapp_node</code>, ",
              "schema": {
                "default": "",
                "type": "string"
              }
            },
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "description": "Maximum allowed value: 5000",
              "schema": {
                "minimum": 1,
                "maximum": 5000,
                "default": 10,
                "type": "number"
              }
            },
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Sort by one or few fields. <br><br>You can sort only by: &nbsp;&nbsp;<code>id</code>,&nbsp;&nbsp;<code>fee</code>,&nbsp;&nbsp;<code>public_key</code>,&nbsp;&nbsp;<code>owner_address</code>,&nbsp;&nbsp;<code>name</code>,&nbsp;&nbsp;<code>address</code>,&nbsp;&nbsp;<code>location</code>,&nbsp;&nbsp;<code>setup_provider</code>,&nbsp;&nbsp;<code>eth1_node_client</code>,&nbsp;&nbsp;<code>eth2_node_client</code>,&nbsp;&nbsp;<code>description</code>,&nbsp;&nbsp;<code>website_url</code>,&nbsp;&nbsp;<code>twitter_url</code>,&nbsp;&nbsp;<code>linkedin_url</code>,&nbsp;&nbsp;<code>validators_count</code>,&nbsp;&nbsp;<code>status</code>,&nbsp;&nbsp;<code>performance.30d</code>,&nbsp;&nbsp;<code>performance.24h</code>,&nbsp;&nbsp;<code>type</code><br><br>Examples: <ol><li><code>name:asc,address:desc</code><br><br></li><li><code>validators_count:desc</code><br><br></li><li>without specifying sort order: <code>validators_count,name:asc</code> - equals to: <code>validators_count:asc,name:asc</code><br><br></li></ol>",
              "schema": {
                "default": "",
                "type": "string"
              }
            },
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Full-text search for entries matching all fields in a case-insensitive way",
              "schema": {
                "default": "",
                "type": "string"
              }
            },
            {
              "name": "has_dkg_address",
              "required": false,
              "in": "query",
              "description": "Filter operators by whether they have a DKG address or not.",
              "schema": {
                "type": "boolean"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Operators found and returned in response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "operators": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Operator"
                        }
                      },
                      "pagination": {
                        "$ref": "#/definitions/Pagination"
                      }
                    },
                    "required": [
                      "operators",
                      "pagination"
                    ],
                    "title": "Operators",
                    "$schema": "http://json-schema.org/draft-06/schema#",
                    "definitions": {
                      "Operators": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "operators": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Operator"
                            }
                          },
                          "pagination": {
                            "$ref": "#/definitions/Pagination"
                          }
                        },
                        "required": [
                          "operators",
                          "pagination"
                        ],
                        "title": "Operators"
                      },
                      "Operator": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "id_str": {
                            "type": "string",
                            "format": "integer"
                          },
                          "declared_fee": {
                            "type": "string",
                            "format": "integer"
                          },
                          "previous_fee": {
                            "type": "string"
                          },
                          "fee": {
                            "type": "string",
                            "format": "integer"
                          },
                          "public_key": {
                            "type": "string"
                          },
                          "owner_address": {
                            "type": "string"
                          },
                          "address_whitelist": {
                            "type": "string"
                          },
                          "whitelist_addresses": {
                            "type": "array",
                            "items": {
                              "type": "string"
                            }
                          },
                          "is_private": {
                            "type": "boolean"
                          },
                          "whitelisting_contract": {
                            "type": "string"
                          },
                          "location": {
                            "type": "string"
                          },
                          "setup_provider": {
                            "type": "string"
                          },
                          "eth1_node_client": {
                            "$ref": "#/definitions/Eth1NodeClient"
                          },
                          "eth2_node_client": {
                            "type": "string"
                          },
                          "mev_relays": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "website_url": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "twitter_url": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "linkedin_url": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "dkg_address": {
                            "type": "string",
                            "qt-uri-protocols": [
                              "https"
                            ]
                          },
                          "logo": {
                            "type": "string",
                            "format": "uri",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "qt-uri-extensions": [
                              ".jpeg",
                              ".png"
                            ]
                          },
                          "type": {
                            "$ref": "#/definitions/Type"
                          },
                          "name": {
                            "type": "string"
                          },
                          "performance": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "number"
                            }
                          },
                          "is_valid": {
                            "type": "boolean"
                          },
                          "is_deleted": {
                            "type": "boolean"
                          },
                          "is_active": {
                            "type": "integer"
                          },
                          "status": {
                            "$ref": "#/definitions/Status"
                          },
                          "validators_count": {
                            "type": "integer"
                          },
                          "version": {
                            "$ref": "#/definitions/Version"
                          },
                          "network": {
                            "$ref": "#/definitions/Network"
                          }
                        },
                        "required": [
                          "address_whitelist",
                          "declared_fee",
                          "description",
                          "dkg_address",
                          "eth1_node_client",
                          "eth2_node_client",
                          "fee",
                          "id",
                          "id_str",
                          "is_active",
                          "is_deleted",
                          "is_private",
                          "is_valid",
                          "linkedin_url",
                          "location",
                          "logo",
                          "mev_relays",
                          "name",
                          "network",
                          "owner_address",
                          "performance",
                          "previous_fee",
                          "public_key",
                          "setup_provider",
                          "status",
                          "twitter_url",
                          "type",
                          "validators_count",
                          "version",
                          "website_url",
                          "whitelist_addresses",
                          "whitelisting_contract"
                        ],
                        "title": "Operator"
                      },
                      "Pagination": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "total": {
                            "type": "integer"
                          },
                          "pages": {
                            "type": "integer"
                          },
                          "per_page": {
                            "type": "integer"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "current_first": {
                            "type": "integer"
                          },
                          "current_last": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "current_first",
                          "current_last",
                          "page",
                          "pages",
                          "per_page",
                          "total"
                        ],
                        "title": "Pagination"
                      },
                      "Eth1NodeClient": {
                        "type": "string",
                        "enum": [
                          "Nethermind",
                          "Geth",
                          "Besu"
                        ],
                        "title": "Eth1NodeClient"
                      },
                      "Network": {
                        "type": "string",
                        "enum": [
                          "mainnet"
                        ],
                        "title": "Network"
                      },
                      "Status": {
                        "type": "string",
                        "enum": [
                          "Active"
                        ],
                        "title": "Status"
                      },
                      "Type": {
                        "type": "string",
                        "enum": [
                          "verified_operator"
                        ],
                        "title": "Type"
                      },
                      "Version": {
                        "type": "string",
                        "enum": [
                          "v4"
                        ],
                        "title": "Version"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Requested page number does not exists"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        },
        "post": {
          "operationId": "OperatorsV4Controller_getByIds",
          "summary": "List operators by ids",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "ids"
                  ],
                  "properties": {
                    "ids": {
                      "type": "array",
                      "items": {
                        "type": "number"
                      }
                    }
                  }
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "OK"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/operators/{operator}/metadata": {
        "put": {
          "operationId": "OperatorsV4Controller_updateMetadata",
          "summary": "Update operator metadata",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "operator",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "requestBody": {
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/OperatorMetadataDto"
                }
              }
            }
          },
          "responses": {
            "200": {
              "description": "Operator found and his metadata was updated. Final operator returned in response"
            },
            "401": {
              "description": "Owner address is not authorized to perform this action"
            },
            "404": {
              "description": "Operator does not exist"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/operators/nodes/{layer}": {
        "get": {
          "operationId": "OperatorsV4Controller_nodes",
          "summary": "List of available Eth node clients",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "layer",
              "required": true,
              "in": "path",
              "description": "Eth node layer",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ],
                "enum": [
                  "1",
                  "2"
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of available Eth node clients"
            },
            "400": {
              "description": "Layer has wrong format or value"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/operators/locations": {
        "get": {
          "operationId": "OperatorsV4Controller_locations",
          "summary": "List of available locations",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "List of available locations"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Operators"
          ]
        }
      },
      "/api/v4/{network}/search": {
        "get": {
          "operationId": "SearchV4Controller_search",
          "summary": "Search operators and validators",
          "parameters": [
            {
              "name": "search",
              "required": true,
              "in": "query",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "searchFor",
              "required": false,
              "in": "query",
              "schema": {
                "default": "both",
                "enum": [
                  "operators",
                  "validators",
                  "both"
                ],
                "type": "string"
              }
            },
            {
              "name": "operatorsLimit",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 0,
                "default": 5,
                "type": "number"
              }
            },
            {
              "name": "validatorsLimit",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 0,
                "default": 5,
                "type": "number"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Operators or validators found and returned in response"
            },
            "400": {
              "description": "Search parameters provided with incorrect values"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Search",
            "v4"
          ]
        }
      },
      "/api/v4/{network}/validators/countActiveValidators": {
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Network name"
          }
        ],
        "get": {
          "summary": "Count active validators in network",
          "tags": [
            "Validators"
          ],
          "responses": {
            "200": {
              "description": "Validators counted and returned in response"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/api/v4/{network}/validators/owned_by/{ownerAddress}/cost": {
        "get": {
          "operationId": "ValidatorsV4Controller_cost",
          "summary": "Cost of all validators depending on in which operators they are.",
          "parameters": [
            {
              "name": "ownerAddress",
              "required": true,
              "in": "path",
              "description": "Owner address",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "OK"
            },
            "400": {
              "description": "Account address has wrong format"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Validators"
          ]
        }
      },
      "/api/v4/{network}/validators/in_operator/{operator}": {
        "get": {
          "operationId": "ValidatorsV4Controller_inOperator",
          "summary": "List of validators in operator",
          "parameters": [
            {
              "name": "page",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "description": "Maximum allowed value: 100",
              "schema": {
                "minimum": 1,
                "maximum": 100,
                "default": 10,
                "type": "number"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "operator",
              "required": true,
              "in": "path",
              "description": "Operator address or ID from the contract",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Validators found and returned in response"
            },
            "404": {
              "description": "No such operator or operator does not have validators"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Validators"
          ]
        }
      },
      "/api/v4/{network}/validators/incentivized/{validator}": {
        "get": {
          "operationId": "ValidatorsV4Controller_incentivized",
          "summary": "Incentivized stats",
          "parameters": [
            {
              "name": "epochFrom",
              "required": true,
              "in": "query",
              "schema": {
                "minimum": 1,
                "type": "number"
              }
            },
            {
              "name": "epochsPerRound",
              "required": true,
              "in": "query",
              "schema": {
                "minimum": 1,
                "type": "number"
              }
            },
            {
              "name": "rounds",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "maximum": 5,
                "default": 3,
                "type": "number"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "validator",
              "required": true,
              "in": "path",
              "description": "Validator address",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Validator found and returned in response"
            },
            "400": {
              "description": "Validator address has wrong format"
            },
            "404": {
              "description": "Validator not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Validators"
          ]
        }
      },
      "/api/v4/{network}/validators/{validator}": {
        "get": {
          "operationId": "ValidatorsV4Controller_validator",
          "summary": "Single validator data",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "validator",
              "required": true,
              "in": "path",
              "description": "Validator public_key",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Validator found and returned in response"
            },
            "400": {
              "description": "Validator public_key has wrong format"
            },
            "404": {
              "description": "Validator not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Validators"
          ]
        }
      },
      "/api/v4/{network}/validators/isRegisteredValidator/{validator}": {
        "get": {
          "operationId": "ValidatorsV4Controller_validator",
          "summary": "If validator is registered - single validator data, 404 otherwise",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "validator",
              "required": true,
              "in": "path",
              "description": "Validator public_key",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Validator found and returned in response"
            },
            "400": {
              "description": "Validator public_key has wrong format"
            },
            "404": {
              "description": "Validator not found"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Validators"
          ]
        }
      },
      "/api/v4/{network}/validators/registeredByPublicKeys": {
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Network name"
          }
        ],
        "post": {
          "summary": "Return registered public keys",
          "tags": [
            "Validators"
          ],
          "responses": {
            "200": {
              "description": "Validators found and returned in response"
            },
            "400": {
              "description": "Public key has wrong format"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "requestBody": {
            "description": "Public keys",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "An array of public keys"
                    }
                  },
                  "required": [
                    "publicKeys"
                  ]
                }
              }
            },
            "components": {
              "schemas": {
                "RegisteredByPublicKeysDto": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "string[]"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "/api/v4/{network}/validators": {
        "get": {
          "operationId": "ValidatorsV4Controller_validators",
          "summary": "List of validators",
          "parameters": [
            {
              "name": "lastId",
              "required": false,
              "in": "query",
              "schema": {
                "minimum": 1,
                "default": 1,
                "type": "number"
              }
            },
            {
              "name": "pageDirection",
              "required": false,
              "in": "query",
              "description": "either \"next\" or \"prev\"",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "perPage",
              "required": false,
              "in": "query",
              "description": "Maximum allowed value: 1000",
              "schema": {
                "minimum": 1,
                "maximum": 1000,
                "default": 10,
                "type": "number"
              }
            },
            {
              "name": "ordering",
              "required": false,
              "in": "query",
              "description": "Sort by one or few fields. <br><br>You can sort only by: &nbsp;&nbsp;<code>id</code>,&nbsp;&nbsp;<code>status</code>,&nbsp;&nbsp;<code>public_key</code>,&nbsp;&nbsp;<code>owner_address</code><br><br>Examples: <ol><li><code>id:asc,public_key:desc</code><br><br></li><li><code>public_key</code><br><br></li><li>without specifying sort order: <code>owner_address,public_key</code> - equals to: <code>owner_address:asc,public_key:asc</code><br><br></li></ol>",
              "schema": {
                "default": "",
                "type": "string"
              }
            },
            {
              "name": "ownerAddress",
              "required": false,
              "in": "query",
              "description": "Filter by owner",
              "schema": {
                "default": "",
                "type": "string"
              }
            },
            {
              "name": "search",
              "required": false,
              "in": "query",
              "description": "Full-text search for entries matching all fields in a case-insensitive way",
              "schema": {
                "default": "",
                "type": "string"
              }
            },
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Validators found and returned in response",
              "content": {
                "application/json": {
                  "schema": {
                    "type": "object",
                    "additionalProperties": false,
                    "properties": {
                      "validators": {
                        "type": "array",
                        "items": {
                          "$ref": "#/definitions/Validator"
                        }
                      },
                      "pagination": {
                        "$ref": "#/definitions/Pagination"
                      }
                    },
                    "required": [
                      "pagination",
                      "validators"
                    ],
                    "title": "Validators",
                    "$schema": "http://json-schema.org/draft-06/schema#",
                    "definitions": {
                      "Validators": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "validators": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Validator"
                            }
                          },
                          "pagination": {
                            "$ref": "#/definitions/Pagination"
                          }
                        },
                        "required": [
                          "pagination",
                          "validators"
                        ],
                        "title": "Validators"
                      },
                      "Pagination": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "total": {
                            "type": "integer"
                          },
                          "pages": {
                            "type": "integer"
                          },
                          "per_page": {
                            "type": "integer"
                          },
                          "page": {
                            "type": "integer"
                          },
                          "current_first": {
                            "type": "integer"
                          },
                          "current_last": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "current_first",
                          "current_last",
                          "page",
                          "pages",
                          "per_page",
                          "total"
                        ],
                        "title": "Pagination"
                      },
                      "Validator": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "public_key": {
                            "type": "string"
                          },
                          "cluster": {
                            "type": "string"
                          },
                          "owner_address": {
                            "$ref": "#/definitions/OwnerAddress"
                          },
                          "status": {
                            "$ref": "#/definitions/OperatorStatus"
                          },
                          "is_valid": {
                            "type": "boolean"
                          },
                          "is_deleted": {
                            "type": "boolean"
                          },
                          "is_public_key_valid": {
                            "type": "boolean"
                          },
                          "is_shares_valid": {
                            "type": "boolean"
                          },
                          "is_operators_valid": {
                            "type": "boolean"
                          },
                          "operators": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/Operator"
                            }
                          },
                          "validator_info": {
                            "$ref": "#/definitions/ValidatorInfo"
                          },
                          "version": {
                            "$ref": "#/definitions/Version"
                          },
                          "network": {
                            "$ref": "#/definitions/Network"
                          }
                        },
                        "required": [
                          "cluster",
                          "id",
                          "is_deleted",
                          "is_operators_valid",
                          "is_public_key_valid",
                          "is_shares_valid",
                          "is_valid",
                          "network",
                          "operators",
                          "owner_address",
                          "public_key",
                          "status",
                          "validator_info",
                          "version"
                        ],
                        "title": "Validator"
                      },
                      "Operator": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "id": {
                            "type": "integer"
                          },
                          "id_str": {
                            "type": "string",
                            "format": "integer"
                          },
                          "declared_fee": {
                            "type": "string",
                            "format": "integer"
                          },
                          "previous_fee": {
                            "type": "string",
                            "format": "integer"
                          },
                          "fee": {
                            "type": "string"
                          },
                          "public_key": {
                            "type": "string"
                          },
                          "owner_address": {
                            "$ref": "#/definitions/OwnerAddress"
                          },
                          "address_whitelist": {
                            "$ref": "#/definitions/OwnerAddress"
                          },
                          "whitelist_addresses": {
                            "type": "array",
                            "items": {
                              "$ref": "#/definitions/OwnerAddress"
                            }
                          },
                          "is_private": {
                            "type": "boolean"
                          },
                          "whitelisting_contract": {
                            "type": "string"
                          },
                          "location": {
                            "$ref": "#/definitions/Location"
                          },
                          "setup_provider": {
                            "$ref": "#/definitions/SetupProvider"
                          },
                          "eth1_node_client": {
                            "$ref": "#/definitions/Eth1NodeClient"
                          },
                          "eth2_node_client": {
                            "$ref": "#/definitions/Eth2NodeClient"
                          },
                          "mev_relays": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "website_url": {
                            "type": "string"
                          },
                          "twitter_url": {
                            "type": "string"
                          },
                          "linkedin_url": {
                            "type": "string"
                          },
                          "dkg_address": {
                            "type": "string"
                          },
                          "logo": {
                            "type": "string",
                            "format": "uri",
                            "qt-uri-protocols": [
                              "https"
                            ],
                            "qt-uri-extensions": [
                              ".png"
                            ]
                          },
                          "type": {
                            "$ref": "#/definitions/Type"
                          },
                          "name": {
                            "$ref": "#/definitions/Name"
                          },
                          "performance": {
                            "type": "object",
                            "additionalProperties": {
                              "type": "number"
                            }
                          },
                          "is_valid": {
                            "type": "boolean"
                          },
                          "is_deleted": {
                            "type": "boolean"
                          },
                          "is_active": {
                            "type": "integer"
                          },
                          "status": {
                            "$ref": "#/definitions/OperatorStatus"
                          },
                          "validators_count": {
                            "type": "integer"
                          },
                          "version": {
                            "$ref": "#/definitions/Version"
                          },
                          "network": {
                            "$ref": "#/definitions/Network"
                          }
                        },
                        "required": [
                          "address_whitelist",
                          "declared_fee",
                          "description",
                          "dkg_address",
                          "eth1_node_client",
                          "eth2_node_client",
                          "fee",
                          "id",
                          "id_str",
                          "is_active",
                          "is_deleted",
                          "is_private",
                          "is_valid",
                          "linkedin_url",
                          "location",
                          "logo",
                          "mev_relays",
                          "name",
                          "network",
                          "owner_address",
                          "performance",
                          "previous_fee",
                          "public_key",
                          "setup_provider",
                          "status",
                          "twitter_url",
                          "type",
                          "validators_count",
                          "version",
                          "website_url",
                          "whitelist_addresses",
                          "whitelisting_contract"
                        ],
                        "title": "Operator"
                      },
                      "ValidatorInfo": {
                        "type": "object",
                        "additionalProperties": false,
                        "properties": {
                          "index": {
                            "type": "integer"
                          },
                          "status": {
                            "$ref": "#/definitions/ValidatorInfoStatus"
                          },
                          "activation_epoch": {
                            "type": "integer"
                          }
                        },
                        "required": [
                          "activation_epoch",
                          "index",
                          "status"
                        ],
                        "title": "ValidatorInfo"
                      },
                      "Network": {
                        "type": "string",
                        "enum": [
                          "mainnet"
                        ],
                        "title": "Network"
                      },
                      "Eth1NodeClient": {
                        "type": "string",
                        "enum": [
                          "Geth",
                          ""
                        ],
                        "title": "Eth1NodeClient"
                      },
                      "Eth2NodeClient": {
                        "type": "string",
                        "enum": [
                          "Prysm",
                          "Lighthouse",
                          ""
                        ],
                        "title": "Eth2NodeClient"
                      },
                      "Location": {
                        "type": "string",
                        "enum": [
                          "United States of America",
                          ""
                        ],
                        "title": "Location"
                      },
                      "Name": {
                        "type": "string",
                        "enum": [
                          "SSV Labs",
                          "SSV Labs 2",
                          "SSV Labs 3",
                          "SSV Labs 4"
                        ],
                        "title": "Name"
                      },
                      "SetupProvider": {
                        "type": "string",
                        "enum": [
                          "AWS",
                          ""
                        ],
                        "title": "SetupProvider"
                      },
                      "OperatorStatus": {
                        "type": "string",
                        "enum": [
                          "Active"
                        ],
                        "title": "OperatorStatus"
                      },
                      "Type": {
                        "type": "string",
                        "enum": [
                          "operator"
                        ],
                        "title": "Type"
                      },
                      "Version": {
                        "type": "string",
                        "enum": [
                          "v4"
                        ],
                        "title": "Version"
                      },
                      "OwnerAddress": {
                        "type": "string",
                        "enum": [
                          "0x5E33db0b37622F7E6b2f0654aA7B985D854EA9Cb",
                          "0x3187a42658417a4d60866163A4534Ce00D40C0C8"
                        ],
                        "title": "OwnerAddress"
                      },
                      "ValidatorInfoStatus": {
                        "type": "string",
                        "enum": [
                          "active_ongoing"
                        ],
                        "title": "ValidatorInfoStatus"
                      }
                    }
                  }
                }
              }
            },
            "404": {
              "description": "Requested page number does not exists"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Validators"
          ]
        }
      },
      "/api/v4/{network}/validators/duty_counts/{from_epoch}/{to_epoch}": {
        "get": {
          "operationId": "ValidatorsV4Controller_dutyCounts",
          "summary": "Duty counts by validators in an epoch range",
          "parameters": [
            {
              "name": "network",
              "required": true,
              "in": "path",
              "schema": {
                "type": "string"
              }
            },
            {
              "name": "from_epoch",
              "required": true,
              "in": "path",
              "description": "Epoch number",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            },
            {
              "name": "to_epoch",
              "required": true,
              "in": "path",
              "description": "Epoch number",
              "schema": {
                "oneOf": [
                  {
                    "type": "string"
                  }
                ]
              }
            }
          ],
          "responses": {
            "200": {
              "description": "Duty counts found and returned in response"
            },
            "404": {
              "description": "Requested page number does not exists"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "tags": [
            "Validators"
          ]
        }
      },
      "/api/v4/{network}/validators/validatorsByClusterHash/{clusterHash}": {
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Network name"
          },
          {
            "name": "clusterHash",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Cluster hash"
          }
        ],
        "get": {
          "summary": "Return validator public keys list by cluster hash",
          "tags": [
            "Validators"
          ],
          "responses": {
            "200": {
              "description": "Validators found and returned in response"
            },
            "400": {
              "description": "Cluster hash has wrong format"
            },
            "500": {
              "description": "Internal server error"
            }
          }
        }
      },
      "/api/v4/{network}/validators/validatorsWithdrawCredentials": {
        "parameters": [
          {
            "name": "network",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Network name"
          }
        ],
        "post": {
          "summary": "Return withdraw credentials",
          "tags": [
            "Validators"
          ],
          "responses": {
            "200": {
              "description": "Withdraw credentials found and returned in response"
            },
            "400": {
              "description": "Public key has wrong format"
            },
            "500": {
              "description": "Internal server error"
            }
          },
          "requestBody": {
            "description": "Public keys",
            "required": true,
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "array",
                      "items": {
                        "type": "string"
                      },
                      "description": "An array of public keys"
                    }
                  },
                  "required": [
                    "publicKeys"
                  ]
                }
              }
            },
            "components": {
              "schemas": {
                "ValidatorPublicKeysDto": {
                  "type": "object",
                  "properties": {
                    "publicKeys": {
                      "type": "string[]"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Filter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "page": {
            "type": "integer"
          },
          "perPage": {
            "type": "integer"
          }
        },
        "required": [
          "page",
          "perPage"
        ],
        "title": "Filter"
      },
      "Network": {
        "type": "string",
        "enum": [
          "mainnet"
        ],
        "title": "Network"
      },
      "Version": {
        "type": "string",
        "enum": [
          "v4"
        ],
        "title": "Version"
      },
      "Datum": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer"
          },
          "ownerAddress": {
            "type": "string"
          },
          "recipientAddress": {
            "anyOf": [
              {
                "type": "null"
              },
              {
                "type": "string"
              }
            ]
          },
          "network": {
            "type": "string",
            "enum": [
              "mainnet"
            ],
            "title": "Network"
          },
          "version": {
            "type": "string",
            "enum": [
              "v4"
            ],
            "title": "Version"
          }
        },
        "required": [
          "id",
          "network",
          "ownerAddress",
          "recipientAddress",
          "version"
        ],
        "title": "Datum"
      },
      "Accounts": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string"
          },
          "filter": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "page": {
                "type": "integer"
              },
              "perPage": {
                "type": "integer"
              }
            },
            "required": [
              "page",
              "perPage"
            ],
            "title": "Filter"
          },
          "data": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer"
                },
                "ownerAddress": {
                  "type": "string"
                },
                "recipientAddress": {
                  "anyOf": [
                    {
                      "type": "null"
                    },
                    {
                      "type": "string"
                    }
                  ]
                },
                "network": {
                  "type": "string",
                  "enum": [
                    "mainnet"
                  ],
                  "title": "Network"
                },
                "version": {
                  "type": "string",
                  "enum": [
                    "v4"
                  ],
                  "title": "Version"
                }
              },
              "required": [
                "id",
                "network",
                "ownerAddress",
                "recipientAddress",
                "version"
              ],
              "title": "Datum"
            }
          }
        },
        "required": [
          "data",
          "filter",
          "type"
        ],
        "title": "Accounts"
      },
      "ClusterCount": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string"
          },
          "data": {
            "type": "integer"
          }
        },
        "required": [
          "data",
          "type"
        ],
        "title": "ClusterCount"
      },
      "definitions-Filter": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "from": {
            "type": "integer"
          },
          "limit": {
            "type": "integer"
          }
        },
        "required": [
          "from",
          "limit"
        ],
        "title": "Filter"
      },
      "Cluster": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "id": {
            "type": "integer"
          },
          "clusterId": {
            "type": "string"
          },
          "network": {
            "type": "string"
          },
          "version": {
            "type": "string"
          },
          "ownerAddress": {
            "type": "string"
          },
          "validatorCount": {
            "type": "integer"
          },
          "networkFeeIndex": {
            "type": "string"
          },
          "index": {
            "type": "string"
          },
          "balance": {
            "type": "string"
          },
          "active": {
            "type": "boolean"
          },
          "isLiquidated": {
            "type": "boolean"
          },
          "operators": {
            "type": "array",
            "items": {
              "type": "integer"
            }
          },
          "blockNumber": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "format": "date-time"
          },
          "updatedAt": {
            "type": "string",
            "format": "date-time"
          }
        },
        "required": [
          "active",
          "balance",
          "blockNumber",
          "clusterId",
          "createdAt",
          "id",
          "index",
          "isLiquidated",
          "network",
          "networkFeeIndex",
          "operators",
          "ownerAddress",
          "updatedAt",
          "validatorCount",
          "version"
        ],
        "title": "Cluster"
      },
      "Clusters": {
        "type": "object",
        "additionalProperties": false,
        "properties": {
          "type": {
            "type": "string"
          },
          "filter": {
            "type": "object",
            "additionalProperties": false,
            "properties": {
              "from": {
                "type": "integer"
              },
              "limit": {
                "type": "integer"
              }
            },
            "required": [
              "from",
              "limit"
            ],
            "title": "Filter"
          },
          "clusters": {
            "type": "array",
            "items": {
              "type": "object",
              "additionalProperties": false,
              "properties": {
                "id": {
                  "type": "integer"
                },
                "clusterId": {
                  "type": "string"
                },
                "network": {
                  "type": "string"
                },
                "version": {
                  "type": "string"
                },
                "ownerAddress": {
                  "type": "string"
                },
                "validatorCount": {
                  "type": "integer"
                },
                "networkFeeIndex": {
                  "type": "string"
                },
                "index": {
                  "type": "string"
                },
                "balance": {
                  "type": "string"
                },
                "active": {
                  "type": "boolean"
                },
                "isLiquidated": {
                  "type": "boolean"
                },
                "operators": {
                  "type": "array",
                  "items": {
                    "type": "integer"
                  }
                },
                "blockNumber": {
                  "type": "integer"
                },
                "createdAt": {
                  "type": "string",
                  "format": "date-time"
                },
                "updatedAt": {
                  "type": "string",
                  "format": "date-time"
                }
              },
              "required": [
                "active",
                "balance",
                "blockNumber",
                "clusterId",
                "createdAt",
                "id",
                "index",
                "isLiquidated",
                "network",
                "networkFeeIndex",
                "operators",
                "ownerAddress",
                "updatedAt",
                "validatorCount",
                "version"
              ],
              "title": "Cluster"
            }
          }
        },
        "required": [
          "clusters",
          "filter",
          "type"
        ],
        "title": "Clusters"
      }
    }
  }
}
